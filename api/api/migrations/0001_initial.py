# Generated by Django 4.0 on 2022-08-20 11:06

import api.constants
import api.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(unique=True)),
                ('elo', models.IntegerField(default=0)),
                ('location_code', models.CharField(default=api.constants.LocationCode['NONE'], max_length=20)),
                ('verified_at', models.DateTimeField(default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'permissions': (('team_owner', 'Owns team'), ('team_leader', 'Is team leader'), ('can_create_events', 'Can create Events'), ('can_create_players', 'Can create Players'), ('can_create_teams', 'Can create Teams'), ('can_create_matches', 'Can create Match')),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map', models.CharField(choices=[('cache', 'Cache'), ('mirage', 'Mirage'), ('inferno', 'Inferno'), ('overpass', 'Overpass'), ('train', 'Train'), ('nuke', 'Nuke')], max_length=40)),
                ('finished', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GameScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('I_half_team_A', models.IntegerField(default=0)),
                ('I_half_team_B', models.IntegerField(default=0)),
                ('total_team_A', models.IntegerField(default=0)),
                ('total_team_B', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='InGameTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=20, null=True)),
                ('starts_as_ct', models.BooleanField()),
                ('is_ct', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='MapPickProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finished', models.BooleanField(default=False)),
                ('next_action', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=10, unique=True)),
                ('full_name', models.CharField(max_length=20, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('location', models.IntegerField(default=0)),
                ('elo', models.IntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tab_prefix', models.CharField(max_length=100)),
                ('tab_color', models.CharField(max_length=100)),
                ('chat_prefix', models.CharField(max_length=100)),
                ('chat_suffix', models.CharField(max_length=100)),
                ('chat_color', models.CharField(max_length=100)),
                ('chat_message_color', models.CharField(max_length=100)),
                ('team_override_color', models.BooleanField(max_length=100)),
                ('permissions', models.ManyToManyField(related_name='permissions', to='api.PlayerPermission')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
                ('roster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.ingameteam')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerRoundStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_half', models.BooleanField()),
                ('round', models.IntegerField()),
                ('side', models.CharField(max_length=2)),
                ('kills', models.IntegerField(default=0)),
                ('deaths', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('headshots', models.IntegerField(default=0)),
                ('game_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_round_stats', to='api.ingameteam')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='OtScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('I_half_team_A', models.IntegerField(default=0)),
                ('I_half_team_B', models.IntegerField(default=0)),
                ('total_team_A', models.IntegerField(default=0)),
                ('total_team_B', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtimes', to='api.game')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=100, null=True)),
                ('start_date', models.DateTimeField()),
                ('actual_start_date', models.DateTimeField(default=None, null=True)),
                ('actual_end_date', models.DateTimeField(default=None, null=True)),
                ('map_count', models.IntegerField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='api.event')),
                ('map_pick_process', models.OneToOneField(default=api.models.new_map_pick_process, on_delete=django.db.models.deletion.CASCADE, related_name='match', to='api.mappickprocess')),
                ('team_one', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.team')),
                ('team_two', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.team')),
            ],
        ),
        migrations.AddField(
            model_name='mappickprocess',
            name='turn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team'),
        ),
        migrations.CreateModel(
            name='MapPick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map_name', models.CharField(max_length=100)),
                ('picked', models.BooleanField(default=None, null=True)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps', to='api.mappickprocess')),
                ('selected_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.team')),
            ],
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(default=None, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='api.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.team')),
            ],
        ),
        migrations.CreateModel(
            name='Hub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('world', models.CharField(max_length=255)),
                ('players', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GamingLobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
                ('players', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayerEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=255)),
                ('meta', models.JSONField(default=dict)),
                ('round', models.IntegerField()),
                ('is_ct', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='match',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games', to='api.match'),
        ),
        migrations.AddField(
            model_name='game',
            name='score',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.gamescore'),
        ),
        migrations.AddField(
            model_name='game',
            name='team_a',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api.ingameteam'),
        ),
        migrations.AddField(
            model_name='game',
            name='team_b',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api.ingameteam'),
        ),
        migrations.CreateModel(
            name='AuthSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=64)),
                ('data', models.JSONField(default=dict)),
                ('player', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('images', models.JSONField(default=list)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.player')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='role',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='api.role'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='api.team'),
        ),
        migrations.AddField(
            model_name='player',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
